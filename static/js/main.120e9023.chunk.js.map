{"version":3,"sources":["components/Form/index.module.css","components/App/index.module.css","redux/reducers/toDoList/actions/actionTypes.js","components/Form/index.js","redux/reducers/toDoList/actions/actionCreators.js","components/Output/index.js","components/App/index.js","redux/reducers/toDoList/index.js","redux/store.js","index.js","components/Output/index.module.css"],"names":["module","exports","actionTypeToken","ADD_ITEM","REMOVE_ITEM","REVERSE","mapDispatchToProps","addItem","text","type","reverse","connect","state","placeholder","toDoList","isReverse","props","inputRef","createRef","useState","inputValue","setInputValue","className","style","wrapper","onSubmit","e","preventDefault","ref","value","onChange","current","btn","onClick","console","dir","focus","isRreverse","removeItem","index","todos","todosCopy","arr","center","list","reversed","map","item","length","App","initialState","action","stateCopy","push","splice","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,IAAM,oB,mBCAxDD,EAAOC,QAAU,CAAC,OAAS,sB,8HCDrBC,EAAkB,oBAEXC,EAAQ,UAAMD,EAAN,aACRE,EAAW,UAAMF,EAAN,gBACXG,EAAO,UAAMH,EAAN,YCyDdI,EAAqB,CACvBC,QC3DmB,SAACC,GACpB,MAAO,CACHC,KAAMN,EACNK,SDyDJE,QChDmB,WACnB,MAAO,CACHD,KAAMJ,KDiDCM,eAXS,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAME,SAASD,YAC5BE,UAAWH,EAAME,SAASC,aAQMT,EAAzBK,EA5DF,SAACK,GACV,IAAMC,EAAWC,sBADG,EAEgBC,mBAASH,EAAMH,aAF/B,mBAEbO,EAFa,KAEDC,EAFC,KAIpB,OACI,mCACI,qBAAKC,UAAYC,IAAMC,QAAvB,SACI,uBAAMC,SAAW,SAAAC,GACbA,EAAEC,iBACCP,IACCJ,EAAMT,QAAQa,GACdC,EAAc,MAJtB,UAOI,gCACI,kCACI,6CACA,uBACIZ,KAAK,OACLmB,IAAMX,EACNY,MAAQT,EACRU,SAAW,WACPT,EAAcJ,EAASc,QAAQF,aAI3C,wBACIP,UAAYC,IAAMS,IAClBC,QAAU,WACNC,QAAQC,IAAIlB,GACZA,EAASc,QAAQK,SAJzB,oBAQJ,4BAAG,kCACC,uBACI3B,KAAK,WACLoB,MAAQb,EAAMqB,WACdP,SAAW,WACPd,EAAMN,aALf,IAOI,0D,uBEJrBJ,EAAsB,CACxBgC,WDnCsB,SAACC,GACvB,MAAO,CACH9B,KAAML,EACNmC,WCmCO5B,eAXS,SAACC,GACrB,MAAO,CACH4B,MAAO5B,EAAME,SAAS0B,MACtBzB,UAAWH,EAAME,SAASC,aAQMT,EAAzBK,EA1CA,SAACK,GACZ,IAAMD,EAAYC,EAAMD,UAClB0B,EAAS,YAAOzB,EAAMwB,OACtBE,EAAM3B,EAAY0B,EAAU/B,UAAY+B,EAC9C,OACI,qCACI,uBACInB,UAAYC,IAAMoB,OAAS,IAAMpB,IAAM,eAD3C,2CAIA,oBAAID,UAAYC,IAAMqB,KAAOC,SAAW9B,EAAxC,SAEQ2B,EAAII,KAAI,SAACC,EAAMR,GACX,OACI,oBAEIjB,UAAYC,IAAMwB,KAClBd,QAAU,WACNjB,EAAMsB,WAAWvB,EAAa2B,EAAIM,OAAS,EAAIT,EAASA,IAJhE,SAOMQ,GANIR,c,iBCKvBU,MApBf,WACI,OACI,qCACI,uBAEA,oBAAI3B,UAAYC,IAAMoB,OAAtB,wBAEA,uBAEA,cAAC,EAAD,IAEA,uBAEA,cAAC,EAAD,IAEA,2B,eClBNO,EAAe,CACjBV,MAAO,CACH,QACA,QACA,cAEJ3B,YAAa,aACbE,WAAW,GAsBAD,EAnBE,WAAmC,IAAlCF,EAAiC,uDAAzBsC,EAAcC,EAAW,uCACzCC,EAAS,eAAQxC,GAGvB,OAFAwC,EAAUZ,MAAV,YAAsB5B,EAAM4B,OAEpBW,EAAO1C,MACX,KAAKN,EAED,OADAiD,EAAUZ,MAAMa,KAAKF,EAAO3C,MACrB4C,EACX,KAAKhD,EAED,OADAgD,EAAUZ,MAAMc,OAAOH,EAAOZ,MAAO,GAC9Ba,EACX,KAAK/C,EAED,OADA+C,EAAUrC,WAAaqC,EAAUrC,UAC1BqC,EACX,QACI,OAAOxC,ICxBb2C,EAAUC,YAAgB,CAAE1C,aAGnB2C,EAFDC,YAAaH,G,MCK3BI,IAASC,OAED,cAAC,IAAD,CAAUH,MAAQA,EAAlB,SACI,cAAC,EAAD,MAGRI,SAASC,eAAe,U,kBCd5B9D,EAAOC,QAAU,CAAC,cAAc,4BAA4B,KAAO,qBAAqB,KAAO,wB","file":"static/js/main.120e9023.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__10lTY\",\"btn\":\"Form_btn__2yO0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"App_center__3RslX\"};","const actionTypeToken = 'blah-blah-blah-42';\r\n\r\nexport const ADD_ITEM = `${actionTypeToken}_ADD_ITEM`;\r\nexport const REMOVE_ITEM = `${actionTypeToken}_REMOVE_ITEM`;\r\nexport const REVERSE = `${actionTypeToken}_REVERSE`;\r\n","import React, { createRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport style from './index.module.css';\r\nimport { addItem, reverse } from '../../redux/reducers/toDoList/actions/actionCreators'\r\n\r\n\r\nconst Form = (props) => {\r\n    const inputRef = createRef();\r\n    const [inputValue, setInputValue] = useState(props.placeholder);\r\n\r\n    return (\r\n        <>\r\n            <div className={ style.wrapper }>\r\n                <form onSubmit={ e => {\r\n                    e.preventDefault();\r\n                    if(inputValue) {\r\n                        props.addItem(inputValue);\r\n                        setInputValue('');\r\n                    }\r\n                } } >\r\n                    <div>\r\n                        <label>\r\n                            <p>Do something</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                ref={ inputRef }\r\n                                value={ inputValue }\r\n                                onChange={ () => {\r\n                                    setInputValue(inputRef.current.value)\r\n                                } }\r\n                            />\r\n                        </label>\r\n                        <button\r\n                            className={ style.btn }\r\n                            onClick={ () => {\r\n                                console.dir(inputRef);\r\n                                inputRef.current.focus();\r\n                            } }\r\n                        >Add</button>\r\n                    </div>\r\n                    <p><label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            value={ props.isRreverse }\r\n                            onChange={ () => {\r\n                                props.reverse();\r\n                            } }\r\n                        /> <span>Reverse</span>\r\n                    </label></p>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        placeholder: state.toDoList.placeholder,\r\n        isReverse: state.toDoList.isReverse\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    addItem,\r\n    reverse  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import { ADD_ITEM, REMOVE_ITEM, REVERSE } from \"./actionTypes\";\r\n\r\n// ActionCreators\r\nexport const addItem = (text) => {\r\n    return {\r\n        type: ADD_ITEM,\r\n        text\r\n    };\r\n};\r\nexport const removeItem = (index) => {\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        index\r\n    };\r\n};\r\nexport const reverse = () => {\r\n    return {\r\n        type: REVERSE\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport style from './index.module.css';\r\nimport { removeItem } from '../../redux/reducers/toDoList/actions/actionCreators'\r\n\r\nconst Output = (props) => {\r\n    const isReverse = props.isReverse;\r\n    const todosCopy = [...props.todos];\r\n    const arr = isReverse ? todosCopy.reverse() : todosCopy;\r\n    return (\r\n        <>\r\n            <small\r\n                className={ style.center + ' ' + style['output-text']}\r\n            >Click on an item to remove it</small>\r\n            \r\n            <ol className={ style.list } reversed={ isReverse }>\r\n                {\r\n                    arr.map((item, index) => {\r\n                        return (\r\n                            <li\r\n                                key={ index }\r\n                                className={ style.item }\r\n                                onClick={ () => {\r\n                                    props.removeItem(isReverse ? (arr.length - 1 - index) : index)\r\n                                } }\r\n                            >\r\n                                { item }\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.toDoList.todos,\r\n        isReverse: state.toDoList.isReverse\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps =  {\r\n    removeItem\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Output);","import React from 'react';\r\nimport Form from '../Form';\r\nimport Output from '../Output';\r\nimport style from './index.module.css';\r\n\r\nfunction App () {\r\n    return (\r\n        <>\r\n            <hr/>\r\n\r\n            <h1 className={ style.center }>To Do List</h1>\r\n\r\n            <hr/>\r\n\r\n            <Form />\r\n\r\n            <hr/>\r\n            \r\n            <Output />\r\n\r\n            <hr/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import { ADD_ITEM, REMOVE_ITEM, REVERSE } from './actions/actionTypes';\r\n\r\nconst initialState = {\r\n    todos: [\r\n        'React',\r\n        'Redux',\r\n        'TypeScript'\r\n    ],\r\n    placeholder: 'Get a job!',\r\n    isReverse: false\r\n};\r\n\r\nconst toDoList = (state = initialState, action) => {\r\n    const stateCopy = { ...state };\r\n    stateCopy.todos = [...state.todos];\r\n    \r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            stateCopy.todos.push(action.text);\r\n            return stateCopy;\r\n        case REMOVE_ITEM:\r\n            stateCopy.todos.splice(action.index, 1);\r\n            return stateCopy;\r\n        case REVERSE:\r\n            stateCopy.isReverse = !stateCopy.isReverse;\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default toDoList;","import { combineReducers, createStore } from 'redux';\r\nimport toDoList from  './reducers/toDoList';\r\n\r\nconst reducer = combineReducers({ toDoList });\r\nconst store = createStore( reducer );\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    (\r\n        <Provider store={ store }>\r\n            <App />\r\n        </Provider>\r\n    ),\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"output-text\":\"Output_output-text__34cup\",\"list\":\"Output_list__379dj\",\"item\":\"Output_item__2bWOY\"};"],"sourceRoot":""}